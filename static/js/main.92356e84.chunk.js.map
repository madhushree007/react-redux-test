{"version":3,"sources":["components/BotCard/BotCard.js","components/Card/Card.js","components/ScoreBoard.js","components/Game/Game.js","components/Login/Login.js","App.js","State.js","Reducer.js","reportWebVitals.js","index.js","actions.js"],"names":["BotCard","name","calculate","gameLeft","useSelector","store","useState","isFlipped","setIsFlipped","isCardFlipped","useEffect","timer","setTimeout","clearTimeout","flipDirection","src","alt","Card","dispatch","useDispatch","onClick","e","preventDefault","setCardFlip","ScoreBoard","handleGameRestart","userPoints","botPoints","className","Game","user","username","choices","isNext","setIsNext","winner","setWinner","userCard","setUsercard","botCard","setBotcard","useCallback","point","setUserPoint","setBotPoint","userRandomCard","Math","floor","random","length","botRandomCard","logOut","setGameLeft","resetGameLeft","resetUserPoints","resetBotPoints","Login","setUser","onSubmit","addUser","htmlFor","value","onChange","target","type","App","State","id","Reducer","state","action","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createStore","ReactDOM","render","StrictMode","document","getElementById","exports"],"mappings":"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","file":"static/js/main.92356e84.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport ReactCardFlip from 'react-card-flip';\nimport { useSelector } from 'react-redux';\n\nexport default function BotCard ({name, calculate}) {\n  const gameLeft = useSelector(store => store.gameLeft);\n  const [isFlipped, setIsFlipped] = useState(false);\n  const isCardFlipped = useSelector(store => store.isCardFlipped);\n\n  useEffect(() => {\n    setIsFlipped(false);\n\n    if(isCardFlipped) {\n      const timer = setTimeout(() => {\n        setIsFlipped(true);\n        calculate(); \n      }, 600);\n      return () => clearTimeout(timer);\n    }\n}, [isCardFlipped, gameLeft, calculate])\n\n  return (\n    <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\n        <div>\n          <img src={\"./assets/cardBg.jpg\"} alt='bg' />\n        </div>\n \n        <div>\n          <img src={`./assets/bot/${name}.jpg`} alt='bg' />\n        </div>\n      </ReactCardFlip>\n  )\n  }","import { useEffect, useState } from 'react';\nimport ReactCardFlip from 'react-card-flip';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCardFlip } from '../../actions';\n\nexport default function Card ({name}) {\n  const gameLeft = useSelector(store => store.gameLeft);\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  const dispatch = useDispatch();\n  \n  const handleClick = (e) => {\n    e.preventDefault();\n    setIsFlipped(true);\n    dispatch(setCardFlip(true));\n  }\n\n  useEffect(() => {\n    setIsFlipped(false);\n  }, [gameLeft])\n  \n  return (\n    <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\n        <div>\n          <img src={\"./assets/cardBg.jpg\"} alt='bg' onClick={handleClick} />\n        </div>\n \n        <div>\n          <img src={`./assets/${name}.jpg`} alt='front' />\n        </div>\n      </ReactCardFlip>\n  )\n  }","import { useSelector } from 'react-redux';\nimport './Game/game.scss';\n\nexport default function ScoreBoard ({handleGameRestart}) {\n  const userPoints = useSelector(store => store.userPoints);\n  const botPoints = useSelector(store => store.botPoints);\n  return (\n    <div className='modal'>\n        <div className='modal-content'>\n          <h3>{ userPoints > botPoints \n            ? 'Congratulation you won! ðŸŽ‰  ' \n            : userPoints === botPoints \n                ? 'Its a draw!' \n                : 'Computer has won the game. Better luck next time!'\n\n          }\n          </h3>\n          <div>\n            <button className='nextBtn' onClick={handleGameRestart}>Start Again</button>\n            </div>\n        </div>\n    </div>\n  )\n}","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logOut, resetBotPoints, resetGameLeft, resetUserPoints, setBotPoint, setCardFlip, setGameLeft, setUserPoint } from '../../actions';\nimport BotCard from '../BotCard/BotCard';\nimport Card from '../Card/Card';\nimport ScoreBoard from '../ScoreBoard';\nimport './game.scss';\n\nexport default function Game () {\n  const user = useSelector(store => store.username);\n  const choices = useSelector(store => store.choices);\n  const userPoints = useSelector(store => store.userPoints);\n  const botPoints = useSelector(store => store.botPoints);\n  const gameLeft = useSelector(store => store.gameLeft);\n\n  const [isNext, setIsNext] = useState(false);\n  const [winner, setWinner] = useState(false);\n  const [userCard, setUsercard] = useState({});\n  const [botCard, setBotcard] = useState({});\n\n  const dispatch = useDispatch();\n\n  const calculate = useCallback(() => {\n    setIsNext(true);\n    if(userCard.point > botCard.point) {\n      dispatch(setUserPoint())\n    } else if(userCard.point < botCard.point) {\n      dispatch(setBotPoint())\n    }\n  }, [userCard.point, botCard.point, dispatch])\n\n  const handleGame = () => {\n    if(gameLeft === 1) {\n      setWinner(true);\n    }\n    dispatch(setGameLeft())\n    dispatch(setCardFlip(false))\n  }\n\n  const handleGameRestart = () => {\n    dispatch(resetGameLeft())\n    dispatch(resetUserPoints())\n    dispatch(resetBotPoints())\n    setWinner(false);\n  }\n\n  useEffect(() => {\n    const userRandomCard = choices[Math.floor(Math.random() * choices.length)];\n    setUsercard(userRandomCard);\n    const botRandomCard = choices[Math.floor(Math.random() * choices.length)];\n    setBotcard(botRandomCard);\n    setIsNext(false);\n  }, [gameLeft, choices])\n\n  return (\n    <div className='game'>\n      <div className='gameHeader'>\n        <h2>Hello {user}!</h2>\n        <h5 className='logout' onClick={() => dispatch(logOut())}>Logout</h5>\n      </div>\n      \n      <h3>Let's play card game with computer.</h3>\n      <p>To start the game click on your card and then computer will reveal it's card, whoever's card is bigger gets one point. In case both gets same card, no one get any point. There are 5 turns.</p>\n      <p>{gameLeft === 0 ? 'Game over' : `Game left ${gameLeft}`}</p>\n\n      <div className='cards'>\n        <div>\n          <p className='points'>Your points: {userPoints}</p>\n          <Card name={userCard.name} />\n        </div>\n        <div>\n          <p className='points'>Computer's points: {botPoints}</p>\n          <BotCard name={botCard.name} calculate={calculate} />\n        </div> \n          \n      </div>\n\n      <div className='footer'>\n        {isNext ? <button onClick={handleGame} className='nextBtn'>Next</button> : '' }\n      </div>\n     {winner ? <ScoreBoard handleGameRestart={handleGameRestart} /> : '' }\n     \n    </div>\n  )\n}","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addUser } from '../../actions';\nimport './login.scss';\n\nexport default function Login () {\n  const [user, setUser] = useState('');\n  const dispatch = useDispatch();\n\n  const onSubmit = e => {\n    e.preventDefault();\n    dispatch(addUser(user));\n  }\n  return (\n    <div className='login'>\n        <div className='inner'>\n          <div>\n            <h1>\n              Welcome <br /><span>to</span><br />Card Game\n            </h1>\n          </div>\n\n        <form className='formDiv' onSubmit={onSubmit}>\n          <label htmlFor='firstName'>Please Enter Your Name</label>\n          <input name=\"firstName\" value={user} onChange={e => setUser(e.target.value)}  />\n          <button type=\"submit\">ENTER</button>\n        </form>\n        </div>\n    </div>\n  )\n}","import { useSelector } from 'react-redux';\nimport './App.scss';\nimport Game from './components/Game/Game';\nimport Login from './components/Login/Login';\n\n\nexport default function App() {\n  const user = useSelector(store => store.username)\n  return (\n    <div className='container'>\n      { user ? <Game /> : <Login /> }\n    </div>\n  );\n}\n\n\n","const State = {\n  username: '',\n  choices: [\n    {id: 1, name: 'one', point: 14},\n    {id: 2, name: 'two', point: 2},\n    {id: 3, name: 'three', point: 3},\n    {id: 4, name: 'four', point: 4},\n    {id: 5, name: 'five', point: 5},\n    {id: 6, name: 'six', point: 6},\n    {id: 7, name: 'seven', point: 7},\n    {id: 8, name: 'eight', point: 8},\n    {id: 9, name: 'nine', point: 9},\n    {id: 10, name: 'ten', point: 10},\n    {id: 11, name: 'eleven', point: 11},\n    {id: 12, name: 'twelve', point: 12},\n    {id: 13, name: 'thirteen', point: 13},\n  ],\n  isCardFlipped: false,\n  userPoints: 0,\n  botPoints: 0,\n  gameLeft: 5\n}\n\nexport default State","import State from './State';\n\nconst Reducer = (state=State, action) => {\n  switch(action.type) {\n    case 'ADD_USER':\n      return {...state, username: action.username };\n    case 'USER_LOGOUT':\n      return {...state, username: '' };\n    case 'SET_FLIPPED':\n      return {...state, isCardFlipped: action.isCardFlipped}\n    case 'SET_USER_POINT':\n      return {...state, userPoints: state.userPoints + 1}\n    case 'SET_BOT_POINT':\n      return {...state, botPoints: state.botPoints + 1}\n    case 'SET_GAME_LEFT':\n      return {...state, gameLeft: state.gameLeft - 1}\n    case 'RESET_GAME_LEFT':\n      return {...state, gameLeft: 5}\n    case 'RESET_USER_POINTS':\n      return {...state, userPoints: 0}\n    case 'RESET_BOT_POINTS':\n      return {...state, botPoints: 0}\n    default:\n      return state;\n  }\n}\n\nexport default Reducer;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './App';\nimport './index.css';\nimport Reducer from './Reducer';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = createStore(Reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","exports.addUser = (name) => {\n  return {\n    type: \"ADD_USER\",\n    username: name\n  }\n}\nexports.logOut = () => {\n  return {\n    type: \"USER_LOGOUT\"\n  }\n}\nexports.setCardFlip = (isCardFlipped) => {\n  return {\n    type: \"SET_FLIPPED\",\n    isCardFlipped\n  }\n}\nexports.setUserPoint = () => {\n  return {\n    type: \"SET_USER_POINT\"\n  }\n}\nexports.setBotPoint = () => {\n  return {\n    type: \"SET_BOT_POINT\"\n  }\n}\nexports.setGameLeft = () => {\n  return {\n    type: \"SET_GAME_LEFT\"\n  }\n}\nexports.resetGameLeft = () => {\n  return {\n    type: \"RESET_GAME_LEFT\"\n  }\n}\nexports.resetUserPoints = () => {\n  return {\n    type: \"RESET_USER_POINTS\"\n  }\n}\nexports.resetBotPoints = () => {\n  return {\n    type: \"RESET_BOT_POINTS\"\n  }\n}"],"sourceRoot":""}