[{"/Users/madhushree/Sites/projects/CODEWORKS/Interview/betbull/src/index.js":"1","/Users/madhushree/Sites/projects/CODEWORKS/Interview/betbull/src/App.js":"2","/Users/madhushree/Sites/projects/CODEWORKS/Interview/betbull/src/reportWebVitals.js":"3","/Users/madhushree/Sites/projects/CODEWORKS/Interview/betbull/src/Reducer.js":"4","/Users/madhushree/Sites/projects/CODEWORKS/Interview/betbull/src/State.js":"5","/Users/madhushree/Sites/projects/CODEWORKS/Interview/betbull/src/actions.js":"6","/Users/madhushree/Sites/projects/CODEWORKS/Interview/betbull/src/components/Game/Game.js":"7","/Users/madhushree/Sites/projects/CODEWORKS/Interview/betbull/src/components/Card/Card.js":"8","/Users/madhushree/Sites/projects/CODEWORKS/Interview/betbull/src/components/BotCard/BotCard.js":"9","/Users/madhushree/Sites/projects/CODEWORKS/Interview/betbull/src/components/ScoreBoard.js":"10","/Users/madhushree/Sites/projects/CODEWORKS/Interview/betbull/src/components/Login/Login.js":"11"},{"size":694,"mtime":1609108094656,"results":"12","hashOfConfig":"13"},{"size":340,"mtime":1609108094641,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1609108094657,"results":"15","hashOfConfig":"13"},{"size":831,"mtime":1609108094644,"results":"16","hashOfConfig":"13"},{"size":641,"mtime":1609108094645,"results":"17","hashOfConfig":"13"},{"size":714,"mtime":1609108094646,"results":"18","hashOfConfig":"13"},{"size":2824,"mtime":1609108094652,"results":"19","hashOfConfig":"13"},{"size":866,"mtime":1609108094650,"results":"20","hashOfConfig":"13"},{"size":947,"mtime":1609108094649,"results":"21","hashOfConfig":"13"},{"size":744,"mtime":1609108094655,"results":"22","hashOfConfig":"13"},{"size":838,"mtime":1609108094654,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11fmguk",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/madhushree/Sites/projects/CODEWORKS/Interview/betbull/src/index.js",[],"/Users/madhushree/Sites/projects/CODEWORKS/Interview/betbull/src/App.js",[],["49","50"],"/Users/madhushree/Sites/projects/CODEWORKS/Interview/betbull/src/reportWebVitals.js",[],"/Users/madhushree/Sites/projects/CODEWORKS/Interview/betbull/src/Reducer.js",[],"/Users/madhushree/Sites/projects/CODEWORKS/Interview/betbull/src/State.js",[],"/Users/madhushree/Sites/projects/CODEWORKS/Interview/betbull/src/actions.js",[],"/Users/madhushree/Sites/projects/CODEWORKS/Interview/betbull/src/components/Game/Game.js",["51"],"import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logOut, resetBotPoints, resetGameLeft, resetUserPoints, setBotPoint, setCardFlip, setGameLeft, setUserPoint } from '../../actions';\nimport BotCard from '../BotCard/BotCard';\nimport Card from '../Card/Card';\nimport ScoreBoard from '../ScoreBoard';\nimport './game.scss';\n\nexport default function Game () {\n  const user = useSelector(store => store.username);\n  const choices = useSelector(store => store.choices);\n  const userPoints = useSelector(store => store.userPoints);\n  const botPoints = useSelector(store => store.botPoints);\n  const gameLeft = useSelector(store => store.gameLeft);\n\n  const [isNext, setIsNext] = useState(false);\n  const [winner, setWinner] = useState(false);\n  const [userCard, setUsercard] = useState({});\n  const [botCard, setBotcard] = useState({});\n\n  const dispatch = useDispatch();\n\n  const calculate = () => {\n    setIsNext(true);\n    if(userCard.point > botCard.point) {\n      dispatch(setUserPoint())\n    } else if(userCard.point < botCard.point) {\n      dispatch(setBotPoint())\n    }\n  }\n\n  const handleGame = () => {\n    if(gameLeft === 1) {\n      setWinner(true);\n    }\n    dispatch(setGameLeft())\n    dispatch(setCardFlip(false))\n  }\n\n  const handleGameRestart = () => {\n    dispatch(resetGameLeft())\n    dispatch(resetUserPoints())\n    dispatch(resetBotPoints())\n    setWinner(false);\n  }\n\n  useEffect(() => {\n    const userRandomCard = choices[Math.floor(Math.random() * choices.length)];\n    setUsercard(userRandomCard);\n    const botRandomCard = choices[Math.floor(Math.random() * choices.length)];\n    setBotcard(botRandomCard);\n    setIsNext(false);\n  }, [gameLeft])\n\n  return (\n    <div className='game'>\n      <div className='gameHeader'>\n        <h2>Hello {user}!</h2>\n        <h5 className='logout' onClick={() => dispatch(logOut())}>Logout</h5>\n      </div>\n      \n      <h3>Let's play card game with computer.</h3>\n      <p>To start the game click on your card and then computer will reveal it's card, whoever's card is bigger gets one point. In case both gets same card, no one get any point. There are 5 turns.</p>\n      <p>{gameLeft === 0 ? 'Game over' : `Game left ${gameLeft}`}</p>\n\n      <div className='cards'>\n        <div>\n          <p className='points'>Your points: {userPoints}</p>\n          <Card name={userCard.name} />\n        </div>\n        <div>\n          <p className='points'>Computer's points: {botPoints}</p>\n          <BotCard name={botCard.name} calculate={calculate} />\n        </div> \n          \n      </div>\n\n      <div className='footer'>\n        {isNext ? <button onClick={handleGame} className='nextBtn'>Next</button> : '' }\n      </div>\n     {winner ? <ScoreBoard handleGameRestart={handleGameRestart} /> : '' }\n     \n    </div>\n  )\n}","/Users/madhushree/Sites/projects/CODEWORKS/Interview/betbull/src/components/Card/Card.js",[],"/Users/madhushree/Sites/projects/CODEWORKS/Interview/betbull/src/components/BotCard/BotCard.js",["52","53"],"import { useEffect, useState } from 'react';\nimport ReactCardFlip from 'react-card-flip';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport default function BotCard ({name, calculate}) {\n  const gameLeft = useSelector(store => store.gameLeft);\n  const [isFlipped, setIsFlipped] = useState(false);\n  const isCardFlipped = useSelector(store => store.isCardFlipped);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setIsFlipped(false);\n\n    if(isCardFlipped) {\n      const timer = setTimeout(() => {\n        setIsFlipped(true);\n        calculate(); \n      }, 600);\n      return () => clearTimeout(timer);\n    }\n}, [isCardFlipped, gameLeft])\n\n  return (\n    <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\n        <div>\n          <img src={\"/assets/cardBg.jpg\"} alt='bg' />\n        </div>\n \n        <div>\n          <img src={`/assets/bot/${name}.jpg`} alt='bg' />\n        </div>\n      </ReactCardFlip>\n  )\n  }","/Users/madhushree/Sites/projects/CODEWORKS/Interview/betbull/src/components/ScoreBoard.js",[],"/Users/madhushree/Sites/projects/CODEWORKS/Interview/betbull/src/components/Login/Login.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":53,"column":6,"nodeType":"60","endLine":53,"endColumn":16,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":9,"column":9,"nodeType":"64","messageId":"65","endLine":9,"endColumn":17},{"ruleId":"58","severity":1,"message":"66","line":21,"column":4,"nodeType":"60","endLine":21,"endColumn":29,"suggestions":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'choices'. Either include it or remove the dependency array.","ArrayExpression",["70"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'calculate'. Either include it or remove the dependency array. If 'calculate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["71"],"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},"Update the dependencies array to be: [choices, gameLeft]",{"range":"76","text":"77"},"Update the dependencies array to be: [isCardFlipped, gameLeft, calculate]",{"range":"78","text":"79"},[1709,1719],"[choices, gameLeft]",[636,661],"[isCardFlipped, gameLeft, calculate]"]